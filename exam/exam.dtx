% \iffalse meta-comment
%
% Copyright (C) 2015 by Joel Coffman
% -----------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.2
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.2 or later is part of all distributions of LaTeX
% version 1999/12/01 or later.
%
% \fi
%
% \iffalse
%
%<*driver>
\documentclass{ltxdoc}

\usepackage{booktabs}
\usepackage[inline]{enumitem}
\usepackage{hyperref}
\usepackage{microtype}
\usepackage{minted}
\usepackage{nicefrac}
\usepackage{url}

\usepackage{email}
\usepackage{minted-doc}

\usepackage[key]{exam}


\input{.version}


\EnableCrossrefs
\CodelineIndex
\RecordChanges

\begin{document}
  \DocInput{exam.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
% {Upper-case   \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
% Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
% Digits        \0\1\2\3\4\5\6\7\8\9
% Exclamation   \!     Double quote  \"     Hash (number) \#
% Dollar        \$     Percent       \%     Ampersand     \&
% Acute accent  \'     Left paren    \(     Right paren   \)
% Asterisk      \*     Plus          \+     Comma         \,
% Minus         \-     Point         \.     Solidus       \/
% Colon         \:     Semicolon     \;     Less than     \<
% Equals        \=     Greater than  \>     Question mark \?
% Commercial at \@     Left bracket  \[     Backslash     \\
% Right bracket \]     Circumflex    \^     Underscore    \_
% Grave accent  \`     Left brace    \{     Vertical bar  \|
% Right brace   \}     Tilde         \~}
%
%
% \changes{0.1.0}{2016/06/10}{
%    Initial version
% }
%
% \GetFileInfo{exam.sty}
%
% \DoNotIndex{\#,\$,\%,\&,\@,\\,\{,\},\^,\_,\~,\ }
% \DoNotIndex{\@ne}
% \DoNotIndex{\advance,\begingroup,\catcode,\closein}
% \DoNotIndex{\closeout,\day,\def,\edef,\else,\empty,\endgroup}
% \DoNotIndex{\global,\let,\relax}
%
% \title{The \textsf{exam} package\thanks{This document
% corresponds to \textsf{exam}~\fileversion-\version,
% dated \filedate.}}
% \author{Joel Coffman\\\email{joel.coffman@jhu.edu}}
%
% \maketitle
%
% \begin{abstract}
% The \textsf{exam} package provides macros and environments for graded assessments.
% \end{abstract}
%
% \section{Usage}
%
% \DescribeEnv{question}
% The \textsf{question} environment\dots
%
% \begin{VerbatimOut}[gobble=1]{minted/question.out}
% \begin{question}
%   What is $2 + 2$?
% \end{question}
% \end{VerbatimOut}
% \inputminted[gobble=1]{latex}{minted/question.out}
% produces\\
% \input{minted/question.out}
%
% The number of points for each question may be indicated as an optional argument to the environment.
% For example,
% \begin{VerbatimOut}[gobble=1]{minted/question-with-points.out}
% \begin{question}[5]
%   What is $2 + 2$?
%
%   \begin{answer}
%     The answer is 4.
%   \end{answer}
% \end{question}
% \end{VerbatimOut}
% \inputminted[gobble=1]{latex}{minted/question-with-points.out}
% produces\\
% \input{minted/question-with-points.out}
%
% Answers may be included to create an answer key for grading.
% For example,
% \begin{VerbatimOut}[gobble=1]{minted/answer.out}
% \end{VerbatimOut}
% \inputminted[gobble=1]{latex}{minted/answer.out}
% produces\\
% \input{minted/answer.out}
%
% The \textsf{question} environment is modified via the \textsf{prequestion} and \textsf{postquestion} macros.
% One expected use for these macros is to number the questions---e.g., by making them part of an \textsf{enumerate} environment.
%
% The \textsf{prequestion} macro provides a hook to insert commands prior to the beginning of the \textsf{question} environment.
% Users may use it to customize the \textsf{question} environment
%
% The \textsf{alert} macro may be used draw attention to specific text, such as negation.
% For example,
% \begin{VerbatimOut}[gobble=1]{minted/alert.out}
% \begin{question}
%   Which of the following is \alert{not} a prime number?
%
%   \noindent
%   \begin{enumerate*}[
%     before={\vspace{-\parskip}},
%     itemjoin={\hfill},
%     noitemsep,
%   ]
%     \item 2
%     \item 3
%     \item 5
%     \item 7
%     \item 9
%   \end{enumerate*}
% \end{question}
% \end{VerbatimOut}
% \inputminted[gobble=1]{latex}{minted/alert.out}
% produces\\
% \input{minted/alert.out}
% \noindent
% Although the same effect can be achieved using \LaTeX's formatting macros directly, the \textsf{alert} ensures consistent formatting.
%
% The \textsf{blank} macro may be used to insert a ``blank''---useful for fill-in-the-blank questions.
% For example,
% \begin{VerbatimOut}[gobble=1]{minted/fill-in-the-blank.out}
% \begin{question}
%   The \blank{} macro supports fill in the blank questions.
% \end{question}
% \end{VerbatimOut}
% \inputminted[gobble=1]{latex}{minted/fill-in-the-blank.out}
% produces\\
% \input{minted/fill-in-the-blank.out}
%
% The total number of points in the exam is available:
% \begin{VerbatimOut}[gobble=1]{minted/totalpoints.out}
%   This exam contains \total{points} \pointsname{\thepoints}.
% \end{VerbatimOut}
% \inputminted[gobble=1]{latex}{minted/totalpoints.out}
% produces\\
% \input{minted/totalpoints.out}
%
% \StopEventually{
%  \PrintChanges
%  \PrintIndex
% }
%
% \appendix
%
% \section{Implementation}
%
% Require \LaTeXe.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
%    \end{macrocode}
%
% Identify the package and version.
% The spaces between the date, version, and description are significant.
%    \begin{macrocode}
\ProvidesPackage{exam}[%
    2022/01/31 %
    v0.3.1 %
    Style file for exams%
]
%    \end{macrocode}
%
% \subsection{Options}
% Declare a conditional to control printing answers (i.e., solutions).
%    \begin{macrocode}
\newif\ifexam@option@key\relax
%    \end{macrocode}
% Declare the \textsf{key} option.
%    \begin{macrocode}
\DeclareOption{key}{
%    \end{macrocode}
% Set the \textsf{key} flag.
%    \begin{macrocode}
  \exam@option@keytrue
%    \end{macrocode}
%    \begin{macrocode}
}
%    \end{macrocode}
%
% Declare a conditional for numbering the exam questions.
%    \begin{macrocode}
\newif\ifexam@option@numbering\relax
%    \end{macrocode}
% Declare the \textsf{numbering} option.
%    \begin{macrocode}
\DeclareOption{numbering}{
%    \end{macrocode}
% Declare a counter for the number of the question and a shadow copy to see if the counter has been modified.
% If the counter is modified, its value should be one less than the \emph{next} question---i.e., to restart numbering at 1, the counter should be set to 0.
%    \begin{macrocode}
  \newcounter{question}%
  \newcounter{@question}%
%    \end{macrocode}
% Set the \textsf{key} flag.
%    \begin{macrocode}
  \exam@option@numberingtrue
%    \end{macrocode}
% Restart numbering at the appendix.
%    \begin{macrocode}
  \AtBeginDocument{%
    \xapptocmd{\appendix}{%
      \setcounter{question}{0}%
    }{}{}%
  }%
%    \end{macrocode}
%    \begin{macrocode}
}
%    \end{macrocode}
% \changes{0.2.3}{2019/11/21}{
%   Add the numbering option
% }
%
% Process options.
% \mintinline{latex}{\relax} avoids unnecessary lookahead due to the starred form of \mintinline{latex}{\ProcessOptions}.
%    \begin{macrocode}
\ProcessOptions\relax
%    \end{macrocode}
%
% \subsection{Packages}
% Load required packages.
%
% \changes{0.3.0}{2021/03/10}{
%   Remove dependency on \textsf{enumitem} package
% }
%
% The \textsf{environ} package simplifies collecting the body of an environment for passing it to a macro.
%    \begin{macrocode}
\RequirePackage{environ}
%    \end{macrocode}
%
% The \textsf{etoolbox} package is required to support the \textsf{prequestion} and \textsf{postquestion} hooks.
%    \begin{macrocode}
\RequirePackage{etoolbox}
%    \end{macrocode}
%
% The \textsf{pgfkeys} package is required to support key-value arguments to macros.
%    \begin{macrocode}
\RequirePackage{pgfkeys}
%    \end{macrocode}
% \changes{0.2.0}{2016/09/04}{
%    Require the \textsf{pgfkeys} package for key-value options
% }
%
% The \textsf{totcount} package computes and displays the last value assigned to counters.
%    \begin{macrocode}
\RequirePackage{totcount}
%    \end{macrocode}
%
% The \textsf{xcolor} package allows changing the text color in the answer key.
%    \begin{macrocode}
\RequirePackage{xcolor}
%    \end{macrocode}
% \changes{0.1.1}{2016/08/09}{
%    Require the \textsf{xcolor} package
% }
%
% The \textsf{xpatch} package allows patching commands.
%    \begin{macrocode}
\RequirePackage{xpatch}
%    \end{macrocode}
% \changes{0.2.3}{2019/11/21}{
%    Require the \textsf{xpatch} package
% }
%
% \subsection{Configuration}
%
% Define the color for answers in the key.
%    \begin{macrocode}
\colorlet{answer}{blue}
%    \end{macrocode}
% \changes{0.3.1}{2022/01/31}{
%   Use blue for answers in the key
% }
%
% \subsection{Macros / Environments}
% Define the lengths and boxes used by the \textsf{answer} environment.
% \textsf{answerheight} is the height of answer when typeset by \LaTeX.
%    \begin{macrocode}
\newlength{\answerheight}
%    \end{macrocode}
% \textsf{answerbox} contains the answer so its height can be measured.
%    \begin{macrocode}
\newsavebox{\answerbox}
%    \end{macrocode}
%
% \begin{macro}{alert}
% Define the \textsf{alert} macro.
%    \begin{macrocode}
\newcommand{\alert}[1]{%
  \textbf{\emph{#1}}%
}
%    \end{macrocode}
% \changes{0.3.0}{2021/03/10}{
%   Add \textsf{alert} macro
% }
% \end{macro}
%
% \begin{macro}{question}
% Define the \textsf{question} environment.
% The optional parameter is the number of points for the question.
%
% Length for the left margin---used to calculate paragraph shape (e.g., hangindent indent).
%    \begin{macrocode}
\newlength\question@leftmargin%
%    \end{macrocode}
%    \begin{macrocode}
\newenvironment{question}[1][]{%
%    \end{macrocode}
% Number questions if requested.
%    \begin{macrocode}
  \ifexam@option@numbering%
    \begin{enumerate}[
        resume=question,%
    ]
      \ifnum\value{question}=\value{@question}%
      \else%
        \setcounter{\@listctr}{\value{question}}%
      \fi%
      \item%
      \setcounter{question}{\value{\@listctr}}%
      \setcounter{@question}{\value{question}}%
  \fi%
%    \end{macrocode}
% Display the number of points, if specified.
%    \begin{macrocode}
  \exam@points{#1}%
%    \end{macrocode}
% Discard any spaces that appear prior to the start of the question's text.
%    \begin{macrocode}
  \ignorespaces%
%    \end{macrocode}
%    \begin{macrocode}
}{%
  \ifexam@option@numbering%
    \end{enumerate}%
  \fi%
}%
%    \end{macrocode}
%
% \textsf{prequestion} and \textsf{postquestion} must appear before and after the environment's group to have the correct effect (e.g., when \textsf{prequestion} inserts a list \textsf{item}).
% The \textsf{etoolbox} package provides hooks for this purpose.
%    \begin{macrocode}
\BeforeBeginEnvironment{question}{\prequestion}
\AfterEndEnvironment{question}{\postquestion}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{prequestion}
% Define the \textsf{prequestion} macro as a hook for the \textsf{question} environment.
%    \begin{macrocode}
\newcommand{\prequestion}{%
%    \end{macrocode}
% Do nothing by default.
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{postquestion}
% Define the \textsf{postquestion} macro as a hook for the \textsf{question} environment.
%    \begin{macrocode}
\newcommand{\postquestion}{%
%    \end{macrocode}
% End horizontal mode to ship out the current box.
%    \begin{macrocode}
  \par%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{answer}
% Define the \textsf{answer} environment.
% The optional argument specifies the amount of space to reserve for the answer.
%    \begin{macrocode}
\NewEnviron{answer}[1][]{%
%    \end{macrocode}
% Collect the environment's body and pass it to the \textsf{exam@answer} macro.
%    \begin{macrocode}
  \exam@answer[#1]{\BODY}%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{exam@answerfill}
% Define length for the amount of space between answer lines.
%    \begin{macrocode}
\newlength{\answerlinespace}
%    \end{macrocode}
% \begin{table}[tbh]
%   \centering
%   \begin{tabular}{l c@{$\;=\;$}r}
%     \toprule
%     Rule & \multicolumn{2}{c}{Inches}\\
%     \midrule
%     Narrow            & \nicefrac{1}{4}   & 0.25000\\
%     Medium (College)  & \nicefrac{9}{32}  & 0.28125\\
%     Wide (Legal)      & \nicefrac{11}{32} & 0.34375\\
%     \bottomrule
%   \end{tabular}
%   \caption{%
%     Amount of spacing for ruled paper in the US.
%   }
% \end{table}
% Set the length for the space between answer lines.
%    \begin{macrocode}
\setlength{\answerlinespace}{0.3in}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand{\answerline}{\textcolor{lightgray}{\dotfill}}
%    \end{macrocode}
%
% \textsf{exam@answerfill} repeats \textsf{answerline}s to fill the space allocated for an answer.
%
%    \begin{macrocode}
\newcommand{\exam@answerfill}[1][\exam@answer@height]{%
%    \end{macrocode}
% Save the height of the answer.
%    \begin{macrocode}
  \setlength{\answerheight}{#1}%
%    \end{macrocode}
% Ensure good height for the first line.
%    \begin{macrocode}
  \strut%
%    \end{macrocode}
% Start a box.
%    \begin{macrocode}
  \setbox0=\vbox{%
%    \end{macrocode}
% Insert vertical spacing before first line
%    \begin{macrocode}
    \vspace{\answerlinespace}%
%    \end{macrocode}
% Insert \textsf{answerline}.
%    \begin{macrocode}
    \answerline%
%    \end{macrocode}
% End the box.
%    \begin{macrocode}
  }%
%    \end{macrocode}
% Use the box.
%    \begin{macrocode}
  \usebox0%
%    \end{macrocode}
% See if there's sufficient space to repeat the box.
%    \begin{macrocode}
  \ifdim\ht0<\dimexpr0.5\answerheight\relax%
%    \end{macrocode}
% Adjust the spacing before the first repeated answer line.
% (These adjustments were determined by trial and error.)
%    \begin{macrocode}
    \addtolength{\answerheight}{-0.5\answerlinespace}%
    \vadjust{\vspace{-\answerlinespace}}%
%    \end{macrocode}
% \mintinline{latex}{\par} is required prior to repeating the box.
%    \begin{macrocode}
    \par%
%    \end{macrocode}
% Repeat the box as much as necessary to fill the space allocated.
%    \begin{macrocode}
    \leaders\copy0\vskip\the\answerheight plus 1fil%
%    \end{macrocode}
%    \begin{macrocode}
  \fi%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
%
% \changes{0.1.2}{2016/08/11}{
%    Align answerline with existing baseline
% }
% \end{macro}
%
% \begin{macro}{exam@answer}
% Define a helper macro to insert the answer and style it appropriately for the answer key.
% The optional (first) argument are the key-values that control the formatting of the answer.
% The required (second) argument is the answer itself.
%    \begin{macrocode}
\newcommand{\exam@answer}[2][]{%
%    \end{macrocode}
% Define macros used by keys.
%    \begin{macrocode}
  \def\exam@answer@fill{}%
%    \end{macrocode}
% Define keys accepted as optional arguments.
%    \begin{macrocode}
  \pgfkeys{%
    /exam/answer/.is family, /exam/answer,%
    default/.style = {%
      height=0ex,
      width=\linewidth,%
    },%
    height/.estore in = \exam@answer@height,%
    lines/.code = \def\exam@answer@fill{##1},%
    lines/.default = \exam@answerfill,%
    width/.estore in = \exam@answer@width,%
  }%
  \pgfkeys{/exam/answer,default,#1}%
%    \end{macrocode}
% \changes{0.2.0}{2016/09/04}{
%    Use key-value syntax for formatting
% }
% \changes{0.2.0}{2016/09/06}{
%    Add the \texttt{lines} option
% }
% Typeset the answer and save it for future use.
%    \begin{macrocode}
  \savebox{\answerbox}{%
    \parbox{\exam@answer@width}{%
      \vbox{%
        % prevent vertical space when changing color (see http://goo.gl/FCfjdB)
        \leavevmode\color{answer}%
        #2%
      }%
    }%
  }%
%    \end{macrocode}
% Calculate the size of the answer.
% The required size is the height and depth of the box (see \url{https://goo.gl/yzQNHY}).
%    \begin{macrocode}
  \setlength{\answerheight}{\dimexpr\ht\answerbox+\dp\answerbox}%
%    \end{macrocode}
% If the typeset answer's height is less than the requested amount of space, then the optional (first) argument determines the amount of space to leave for the answer.
%    \begin{macrocode}
  \ifdim\exam@answer@height<\answerheight%
    \def\exam@answer@height{\the\answerheight}%
  \fi%
%    \end{macrocode}
% End horizontal mode and ship out the current box.
%    \begin{macrocode}
  \nopagebreak%
  \noindent%
%    \end{macrocode}
% \changes{0.1.4}{2016/08/16}{
%    Discourage page breaks between question and answer
% }
% \changes{0.2.0}{2016/09/04}{
%    Do not insert \texttt{\textbackslash{}par} before answer
% }
% Insert the answer.
%    \begin{macrocode}
  \parbox[t][\exam@answer@height]{\exam@answer@width}{%
    \ifexam@option@key%
      \usebox{\answerbox}%
    \else%
      \exam@answer@fill%
    \fi%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\newtotcounter{points}
\AtEndDocument{%
  \typeout{                                                                  }%
  \typeout{Exam Summary                                                      }%
  \typeout{--------------------                                              }%
  \typeout{Total points: \arabic{points}                                     }%
  \typeout{                                                                  }%
}
%    \end{macrocode}
% \changes{0.2.2}{2018/07/26}{
%   Add support for displaying the total number of points.
% }
%
% \begin{macro}{exam@points}
% The \textsf{exam@points} macro is an internal macro that checks to see if the number of points has been specified, invoking \textsf{points} if so.
%    \begin{macrocode}
\newcommand{\exam@points}[1]{%
%    \end{macrocode}
% Ignore the argument if empty.
%    \begin{macrocode}
  \if\relax\detokenize{#1}\relax%
  \else%
%    \end{macrocode}
% Use \textsf{hspace} to ensure that we're in horizontal mode.
% Without this command, the points may appear in an unexpected location, particularly when inside a list environment.
%    \begin{macrocode}
    \hspace{0em}%
%    \end{macrocode}
% Add the points to the total for the entire exam.
%    \begin{macrocode}
    \addtocounter{points}{#1}%
%    \end{macrocode}
% Use the \textsf{points} macro to show the number of points for the question.
%    \begin{macrocode}
    \points{#1}%
  \fi%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{pointname}
% Define the \textsf{pointname} macro.
%    \begin{macrocode}
\newcommand{\pointname}{%
  point%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{pointnameplural}
% Define the \textsf{pointnameplural} macro.
%    \begin{macrocode}
\newcommand{\pointnameplural}{%
%    \end{macrocode}
% Add an `s' to \mintinline{latex}{\pointname}.
% The user should redefine the command if the plural form isn't correct.
%    \begin{macrocode}
  \pointname{}s%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{points}
% The \textsf{points} macro inserts the number of points for a question.
%    \begin{macrocode}
\newcommand{\points}[1]{%
%    \end{macrocode}
% Put the number of points in the margin for easy reference.
%    \begin{macrocode}
  \marginpar{%
    \small%
    #1 \pointsname{#1}%
  }%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{pointsname}
% The \textsf{pointsname} macro selects the appropriate grammatical number for the specified point value.
%    \begin{macrocode}
\newcommand{\pointsname}[1]{%
%    \end{macrocode}
% Use the plural form for all values not equal to 1.
%    \begin{macrocode}
  \ifnum1=#1\pointname\else\pointnameplural\fi%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{blank}
% The \textsf{blank} macro inserts a ``blank.''
%    \begin{macrocode}
\newcommand{\blank}[1][5em]{%
  \rule{#1}{0.4pt}%
}%
%    \end{macrocode}
% \changes{0.1.3}{2016/08/16}{
%    Add \textsf{blank} macro
% }
% \end{macro}
%
% \subsection*{Specialized Environments}
% \begin{macro}{true/false}
% Define the \mintinline{latex}{true/false} environment.
%    \begin{macrocode}
\newenvironment{true/false}[1][]{%
  \begin{question}[#1]%
    \leavevmode%
    \setbox0=\hbox{True or False\hspace{1em}}%
    \question@leftmargin=\ifnum\@listdepth>0\leftmargin\else0pt\fi%
    \parshape 2
        \question@leftmargin \linewidth
        \dimexpr\question@leftmargin+\wd0\relax \dimexpr\linewidth-\wd0\relax%
    \box0%
}{%
    \par%
  \end{question}%
}
%    \end{macrocode}
% \changes{0.2.1}{2017/09/12}{
%    Add the \texttt{true/false} environment
% }
% \changes{0.2.3}{2019/11/22}{
%    Handle hanging indents when questions are numbered
% }
% \end{macro}
%
% \Finale
\endinput
