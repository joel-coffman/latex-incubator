% \iffalse meta-comment
%
% Copyright (C) 2014 by Joel Coffman
% -----------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.2
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.2 or later is part of all distributions of LaTeX
% version 1999/12/01 or later.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{slides.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{slides}
%<*package>
  [2021/10/20 v0.5.0 Slides package for presentations]
%</package>
%<package>\RequirePackage{xcolor}
%<package>\RequirePackage{xpatch}
%
%<*driver>
\documentclass{ltxdoc}
\input{.version}
\usepackage{microtype}
\usepackage{minted}
\usepackage{email}
\usepackage{theme-doc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{slides.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
% {Upper-case   \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
% Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
% Digits        \0\1\2\3\4\5\6\7\8\9
% Exclamation   \!     Double quote  \"     Hash (number) \#
% Dollar        \$     Percent       \%     Ampersand     \&
% Acute accent  \'     Left paren    \(     Right paren   \)
% Asterisk      \*     Plus          \+     Comma         \,
% Minus         \-     Point         \.     Solidus       \/
% Colon         \:     Semicolon     \;     Less than     \<
% Equals        \=     Greater than  \>     Question mark \?
% Commercial at \@     Left bracket  \[     Backslash     \\
% Right bracket \]     Circumflex    \^     Underscore    \_
% Grave accent  \`     Left brace    \{     Vertical bar  \|
% Right brace   \}     Tilde         \~}
%
%
% \changes{0.1.0}{2015/02/20}{
%   Initial version
% }
%
% \GetFileInfo{slides.dtx}
%
% \DoNotIndex{\#,\$,\%,\&,\@,\\,\{,\},\^,\_,\~,\ }
% \DoNotIndex{\@ne}
% \DoNotIndex{\advance,\begingroup,\catcode,\closein}
% \DoNotIndex{\closeout,\day,\def,\edef,\else,\empty,\endgroup}
% \DoNotIndex{\global,\let,\relax}
%
% \title{The \textsf{slides} package\thanks{This document
% corresponds to \textsf{slides}~\fileversion-\version,
% dated \filedate.}}
% \author{Joel Coffman\\\email{joel.coffman@jhu.edu}}
%
% \maketitle
%
% \begin{abstract}
% The \textsf{slides} package complements \textsf{beamer} when creating presentations in \LaTeX.
% This package's options control the style of the presentation and allows these settings to be easily reused across presentations.
% \end{abstract}
%
% \StopEventually{
%   \PrintChanges
%   \PrintIndex
% }
%
% \section{Options}
% The |handout| option prints two slides per page.
%    \begin{macrocode}
\newif\ifslides@handout\relax
\DeclareOption{handout}{%
  \slides@handouttrue%
}
%    \end{macrocode}
% \changes{0.3.0}{2017/02/09}{
%   Pass `letterpaper' to pgfpagesuselayout
% }
%
% The |outline| option includes outline slides at the beginning of parts, sections, and subsections.
%    \begin{macrocode}
\DeclareOption{outline}{
%    \end{macrocode}
% 
% \begin{macro}{AtBeginPart}
% Insert a frame that identifies the current part of the presentation.
%    \begin{macrocode}
  \AtBeginPart
  {
    \begin{frame}
      \partpage
    \end{frame}
  }
%    \end{macrocode}
% \changes{0.2.3}{2015/08/15}{
%   Remove ``title'' from part page
% }
% \end{macro}
%
% \begin{macro}{AtBeginSection}
% Insert a frame that identifies the current section of the presentation.
% All subsections of the current section are shown;
% subsections of other sections are hidden to minimize the vertical size of the outline.
%    \begin{macrocode}
  \AtBeginSection[]
  {
    \begin{frame}{Outline}
      \tableofcontents[
          currentsection,
          currentsubsection,
          subsubsectionstyle=show/shaded/hide,
      ]
    \end{frame}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{AtBeginSubsection}
% Insert a frame that identifies the current section and subsection in the presentation.
% Any subsubsections in the current subsection are shown;
% those in other subsections are hidden.
%    \begin{macrocode}
  \AtBeginSubsection[]
  {
    \begin{frame}{Outline}
      \tableofcontents[
          currentsection,
          currentsubsection,
          subsectionstyle=show/shaded/hide,
          subsubsectionstyle=show/shaded/hide,
      ]
    \end{frame}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{AtBeginSubsubsection}
% Insert a frame that identifies the current section, subsection, and subsubsection in the presentation.
% Any subsubsections in the current subsection are shown;
% those in other subsections are hidden.
%    \begin{macrocode}
  \AtBeginSubsubsection[]
  {
    \begin{frame}{Outline}
      \tableofcontents[
          currentsection,
          currentsubsection,
          subsectionstyle=show/shaded/hide,
          subsubsectionstyle=show/shaded/hide,
      ]
    \end{frame}
  }
%    \end{macrocode}
% \changes{0.4.3}{2018/09/15}{
%   Add outline slides at the beginning of subsubsections
% }
% \end{macro}
%    \begin{macrocode}
}
%    \end{macrocode}
% \changes{0.1.1}{2015/02/20}{
%   Add hooks to insert outline slides automatically
% }
% \changes{0.2.0}{2015/03/23}{
%   Add \texttt{outline} option to enable outline slides
% }
%
% The |transcript| option displays the presentation notes.
%    \begin{macrocode}
\newif\ifslides@transcript\relax
\DeclareOption{transcript}{
  \slides@transcripttrue
}
%    \end{macrocode}
% \changes{0.3.1}{2017/02/11}{
%   Add \texttt{transcript} option
% }
% \changes{0.4.0}{2017/05/08}{
%   The \texttt{transcript} option does not imply the \texttt{handout} option
% }
%
% Process the specified options.
% |\relax| avoids unnecessary lookahead due to starred version of |\ProcessOptions|.
%    \begin{macrocode}
\ProcessOptions\relax
%    \end{macrocode}
%
% \section{Packages}
% Load required and optional packages.
% Some optional packages are loaded conditionally depending on the package options.
% (See the package options for more details.)
%
% \changes{0.2.2}{2015/03/23}{
%   Remove \textsf{textpos} package dependency
% }
%
% Require the \textsf{adjustbox} package for the |imageframe| macro.
%    \begin{macrocode}
\RequirePackage{adjustbox}
%    \end{macrocode}
% \changes{0.4.3}{2018/09/19}{
%   Add dependency on \textsf{adjustbox} package
% }
%
% Number frames in appendix separately -- i.e., frames in appendix do not count toward total number of frames in "main" presentation.
%    \begin{macrocode}
\RequirePackage{appendixnumberbeamer}
%    \end{macrocode}
% \changes{0.2.1}{2015/03/23}{
%   Add dependency on \textsf{appendixnumberbeamer} package
% }
%
% \section{Configuration}
%
% \changes{0.2.8}{2016/09/27}{
%   Do not change style of quotes
% }
%
% For handouts, load the \textsf{pgfpages} package to include two slides on each page.
% |border shrink| reduces the size of the logical page on the physical page.
%    \begin{macrocode}
\ifslides@handout
  \RequirePackage{pgfpages}
  \pgfpagesuselayout{2 on 1}[
      border shrink=2em,
      letterpaper,
  ]
\fi
%    \end{macrocode}
%
% Set configuration for transcripts.
%    \begin{macrocode}
\ifslides@transcript
%    \end{macrocode}
% Patch Beamer's "show only notes" option to avoid invoking |\nofiles|, which prevents \LaTeX{} from writing any auxiliary files and, as a side effect, prevents glossaries, references, etc. from being displayed in the notes.
%    \begin{macrocode}
  \expandafter%
  \xpatchcmd\csname KV@beamer@option@show only notes\endcsname{\nofiles}{}
      {\PackageInfo{slides}
           {Successfully patched Beamer's `show only notes' option}}
      {\PackageInfo{slides}
           {Error patching Beamer's `show only notes' option!
            Auxiliary files will not be updated.}}
%    \end{macrocode}
% Show the notes (i.e., transcript) on the bottom of each handout page.
%    \begin{macrocode}
  \setbeameroption{show only notes}
%    \end{macrocode}
%    \begin{macrocode}
\fi
%    \end{macrocode}
% \changes{0.4.4}{2020/08/10}{
%   Disable |\nofiles| invocation for notes
% }
%
% \subsection{Templates}
% Remove navigation symbols at the bottom of slides.
% The navigation symbols are almost too small to see in many cases and rarely used in practice.
%    \begin{macrocode}
\setbeamertemplate{navigation symbols}{}
%    \end{macrocode}
% \changes{0.2.4}{2016/02/03}{
%   Remove navigation symbols
% }
%
% Remove part name and number from |partpage|.
% The definition of the |part page| template is copied from Beamer's default inner theme.\footnote{%
%   \url{http://mirrors.ctan.org/macros/latex/contrib/beamer/base/themes/inner/beamerinnerthemedefault.sty}
% }
%    \begin{macrocode}
\setbeamertemplate{part page}{%
  \begingroup
    \centering
    \begin{beamercolorbox}[
        center,
        sep=16pt,
    ]{part title}
      \usebeamerfont{part title}\insertpart\par
    \end{beamercolorbox}
  \endgroup
}%
%    \end{macrocode}
% \changes{0.2.5}{2016/02/04}{
%   Remove part name and number from part page
% }
%
% Replace icon in bibliography with citation text (e.g., number or alphanumeric identifier).
%    \begin{macrocode}
\setbeamertemplate{bibliography entry title}{}
\setbeamertemplate{bibliography entry location}{}
\setbeamertemplate{bibliography entry note}{}
\setbeamertemplate{bibliography item}[text]
%    \end{macrocode}
% \changes{0.1.2}{2015/03/23}{
%   Replace icons in bibliography
% }
%
% \section{Commands}
% \begin{macro}{slides@newblock}
% Redefine \texttt{newblock} to avoid extraneous vertical space when using inline bibliographic entries (e.g., via the \textsf{bibentry} package).
% See ``Wrong vertical spaces using bibentry within beamer''\footnote{\url{http://tex.stackexchange.com/questions/163827/wrong-vertical-spaces-using-bibentry-within-beamer}} for more information.
%
% The following code is copied from \texttt{beamerbaselocalstructure.sty} but omits a \texttt{1.5em} space that appears when the author block spans more than one line.
%    \begin{macrocode}
\def\slides@newblock{%
  \usebeamercolor[fg]{bibliography entry author}%
  \usebeamerfont{bibliography entry author}%
  \usebeamertemplate{bibliography entry author}%
  \def\newblock{%
    \usebeamercolor[fg]{bibliography entry title}%
    \usebeamerfont{bibliography entry title}%
    \usebeamertemplate{bibliography entry title}%
    \def\newblock{%
      \usebeamercolor[fg]{bibliography entry location}%
      \usebeamerfont{bibliography entry location}%
      \usebeamertemplate{bibliography entry location}%
      \def\newblock{%
        \usebeamercolor[fg]{bibliography entry note}%
        \usebeamerfont{bibliography entry note}%
        \usebeamertemplate{bibliography entry note}}}}%
  \leavevmode}
%    \end{macrocode}
%
% Use \texttt{slides@newblock} for \texttt{newblock}.
%    \begin{macrocode}
\let\newblock=\slides@newblock\relax%
%    \end{macrocode}
%
% Restore the original definition in the bibliography.
%    \begin{macrocode}
\xpretocmd{\bibliography}{%
  \mode<presentation>{\let\newblock=\beamer@newblock\relax}%
}{%
  \PackageInfo{slides}{Restored beamer@newblock for bibliography}%
}{%
  \PackageWarning{slides}{Error restoring beamer@newblock for bibliography!}%
}
%    \end{macrocode}
% \changes{0.2.9}{2016/12/01}{
%   Redefine newblock to avoid extraneous vertical space
% }
% \changes{0.3.0}{2017/02/08}{
%   Redefine newblock only in presentation mode
% }
% \end{macro}
%
% \begin{macro}{appendix}
% The \textsf{appendixnumberbeamer} package resets the numbering of sides in the appendix so they are not included in the total number of slides (i.e., they are numbered separately).
% Unfortunately, the implementation does not handle the slide(s) inserted by \mintinline{latex}{\AtBeginPart} correctly:
% for example, the outline slide that displays "Appendix" receives the last frame number of the presentation rather than the first frame number of the appendix.
%
% If the \textsf{appendixnumberbeamer} package is loaded, then patch the existing command by moving \mintinline{latex}{\appendixorig} from its current location in the command to the end of the command.
%    \begin{macrocode}
\AtBeginDocument{%
  \@ifpackageloaded{appendixnumberbeamer}{%
    \patchcmd{\appendix}{\appendixorig}{}{%
      \apptocmd{\appendix}{\appendixorig}{%
        \PackageInfo{slides}{%
          Successfully patched the appendix command!
        }%
      }{%
        \PackageWarning{slides}{%
          Failed to patch the appendix command. The original appendix code may
          not be invoked.
        }%
      }%
    }{%
      \PackageWarning{slides}{%
        Failed to patch the appendix command. Frame numbers in the appendix may
        be incorrect.
      }%
    }%
  }{}%
}
%    \end{macrocode}
% \changes{0.3.0}{2017/02/04}{
%   Patch appendix to correct frame numbers
% }
% \end{macro}
%
% \begin{macro}{bibstyle}
% Use semicolon to separate multiple citations when using \textsf{apalike} bibliography style.
%
% Patch \mintinline{latex}{\bibstyle} to keep track of bibliography style.
% The definition must be global because the auxiliary file (which contains the \mintinline{latex}{bibstyle} invocation) is read in a group.
%    \begin{macrocode}
\xpretocmd{\bibstyle}{%
  \xdef\slides@bibstyle{#1}%
}{}{}%
%    \end{macrocode}
% Patch \mintinline{latex}{\@citex} if the \textsf{breakcites} package is loaded (which defines that macro) and the bibliography style is \textsf{apalike}.
%    \begin{macrocode}
\AtBeginDocument{%
  \@ifpackageloaded{breakcites}{%
    \ifdefstring{\slides@bibstyle}{apalike}{%
      \xpatchcmd{\@citex}{,}{;}{}{}%
    }{}%
  }{}%
}%
%    \end{macrocode}
% \changes{0.3.2}{2017/03/24}{
%   Use semicolon as separator for `apalike' citations
% }
% \end{macro}
%
% \begin{macro}{continued}
% The |continued| command prints a notice that the material is a continuation from prior slides.
%    \begin{macrocode}
\newcommand{\continued}[0]{(continued)}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{credits}
% The |credits| macro adds an unobtrusive acknowledgment for material.
% A primary use case is providing information about images in the presentation.
%    \begin{macrocode}
\newcommand<>{\credits}[1]{%
%    \end{macrocode}
% Force to bottom of the slide.
%    \begin{macrocode}
  \vfill%
%    \end{macrocode}
% Use smallest available font size.
% \mintinline{latex}{\par} is required because the interline space is calculated at the end of the paragraph. ^^A http://goo.gl/ZeyUbN
% Without \mintinline{latex}{\par}, the gap between successive lines is much too large.
%    \begin{macrocode}
  \uncover#2{\ignorespaces\tiny#1\ignorespacesafterend\par}%
%    \end{macrocode}
%    \begin{macrocode}
}%
%    \end{macrocode}
% \changes{0.2.6}{2015/06/22}{
%   Add \texttt{credits} macro
% }
% \changes{0.2.7}{2015/06/23}{
%   Add \texttt{uncover} to control which slides contain credits
% }
% \end{macro}
%
% \begin{macro}{frameimage}
% The |frameimage| environment provides a simple way to create a frame with an image in the background (i.e., no header, footer, or other styling provided by the theme).
%
% Define an overlay-aware environment.
%    \begin{macrocode}
\newenvironment<>{imageframe}[2][]{%
%    \end{macrocode}
% Set the background color to black.
%    \begin{macrocode}
   \setbeamercolor{background canvas}{
     bg=black,
   }
%    \end{macrocode}
% Set the background template for the current slide.
% (Must be in a group, which is implicit inside an environment, to avoid changing the template globally.)
%    \begin{macrocode}
  \setbeamertemplate{background}{%
%    \end{macrocode}
% Center the image vertically and horizontally.
%    \begin{macrocode}
    \vbox to \paperheight{%
      \vfil%
      \hbox to \paperwidth{%
        \hfil%
%    \end{macrocode}
% Scale the image so it is full-frame.
% Because global options (e.g., |height| and |width|) may have been set for \textsf{graphicx}, use |adjustbox| to force the image to be at least the size of the frame.
%    \begin{macrocode}
        \adjustbox{%
            min size={\paperwidth}{\paperheight},%
            max size={\paperwidth}{\paperheight},%
        }{%
          \includegraphics[#1]{#2}%
        }%
        \hfil%
      }%
      \vfil%
    }%
  }%
%    \end{macrocode}
% Create a new frame, passing along the overlay specification (if present) and removing any content provided by the theme.
%    \begin{macrocode}
  \begin{frame}#3[plain]%
%    \end{macrocode}
%    \begin{macrocode}
}{%
%    \end{macrocode}
%    \begin{macrocode}
  \end{frame}%
%    \end{macrocode}
%    \begin{macrocode}
}
%    \end{macrocode}
% \changes{0.4.2}{2018/07/24}{
%   Add \texttt{imageframe} environment
% }
% \end{macro}
%
%    \begin{macrocode}
\AtBeginDocument{
  \@ifpackageloaded{glossaries}{
%    \end{macrocode}
% \begin{macro}{indexspace}
% Provide |indexspace| command as a workaround for \textsf{glossaries} \textless{} 4.13, which does not define it.
%    \begin{macrocode}
    \providecommand*{\indexspace}{}
%    \end{macrocode}
% \changes{0.1.3}{2015/02/20}{
%   Provide \texttt{indexspace} command if \textsf{glossaries} loaded
% }
% \end{macro}
%
% \begin{macro}{glossarysection}
% Redefine \mintinline{latex}{\glossarysection} to do nothing---i.e., do not insert a section command (\mintinline{latex}{\section}, etc.).
%    \begin{macrocode}
    \renewcommand*{\glossarysection}[2][\@gls@title]{}
%    \end{macrocode}
% \changes{0.4.1}{2017/06/27}{
%   Do not start section when printing glossary
% }
% \end{macro}
%    \begin{macrocode}
  }{}
}
%    \end{macrocode}
%
% \begin{macro}{transcript}
% The |transcript| macro allows embedding a transcription for the slides (e.g., in conjunction with the |transcript| package option.
% The current implementation uses \beamer's |note| macro.
%
% Define the |transcript| macro.
% This macro is overlay-specification aware.
%    \begin{macrocode}
\newcommand<>{\transcript}[1]{%
%    \end{macrocode}
% Ignore this macro unless the |transcript| package option is set.
% This requirement allows mixing presentation notes with a transcript.
%    \begin{macrocode}
  \ifslides@transcript%
%    \end{macrocode}
% Use the specified overlay specification if it exists and |transcript| appears inside a frame.
% Otherwise, the transcription appears on the current slide of the frame.
%    \begin{macrocode}
    \def\overlay{#2}%
    \if\relax\detokenize{#2}\relax%
      \ifbeamer@inframe% ignore overlay specification outside of frame
        \def\overlay{<.(1)>}%
      \fi%
    \fi%
%    \end{macrocode}
% Use \beamer's |note| macro as a way to display the transcription.
%    \begin{macrocode}
    \expandafter\note\overlay{%
%    \end{macrocode}
% In some cases, the transcript may span multiple note pages (e.g., when talking for an extended period about a single slide).
% Redefine the |continued| macro in the context of the |transcript| macro to indicate that the transcription continues on additional pages.
%    \begin{macrocode}
      \renewcommand*{\continued}{%
        \par%
        \hspace{0em}\hfill (continued on next page)%
      }%
%    \end{macrocode}
%    \begin{macrocode}
      #1%
    }%
%    \end{macrocode}
%    \begin{macrocode}
  \fi%
%    \end{macrocode}
%    \begin{macrocode}
}
%    \end{macrocode}
% \changes{0.4.0}{2017/05/08}{
%   Add \texttt{transcript} macro
% }
% \changes{0.4.1}{2017/05/09}{
%   Restrict scope when redefining \texttt{continued} macro
% }
% \end{macro}
%
% \begin{macro}{manualtranscript}
% \changes{0.5.0}{2021/10/20}{
%   Remove manualtranscript environment
% }
% \end{macro}
%
% \subsection*{Beamer Internals}
%
% \begin{macro}{beamer@outsideframenote}
% Patch the \mintinline{latex}{note} macro to correct the text width for different aspect ratios.
%    \begin{macrocode}
\xpatchcmd{\beamer@outsideframenote}
    {\textwidth=10.8cm}
    {\textwidth=\dimexpr\paperwidth - (\Gm@lmargin + \Gm@rmargin)}
    {%
      \PackageInfo{slides}{%
        Successfully patched textwidth in beamer@outsideframenote%
      }%
    }%
    {%
      \PackageWarning{slides}{%
        Error patching beamer@outsideframenote; textwidth may be incorrect%
      }%
    }%
%    \end{macrocode}
% Patch the \mintinline{latex}{note} macro to add indentation for paragraphs after the first and to append a \mintinline{latex}{\par} for consistent spacing across paragraphs.
% (Note: The unilateral increase of \mintinline{latex}{\parindent} may not be appropriate in all situations.)
%    \begin{macrocode}
\xpatchcmd{\beamer@outsideframenote}
    {\beamer@noteenvstart#2\beamer@noteenvend}
    {\beamer@noteenvstart\parindent=1em\@afterheading\@afterindentfalse#2\par\beamer@noteenvend}
    {%
      \PackageInfo{slides}{%
        Successfully patched beamer@outsideframenote to correct baselineskip%
      }%
    }%
    {%
      \PackageWarning{slides}{%
        Error patching beamer@outsideframenote; baselineskip may be incorrect%
      }%
    }%
%    \end{macrocode}
% \changes{0.3.0}{2017/03/09}{
%   Patch \texttt{beamer@outsideframenote} command
% }
% \end{macro}
%
% \Finale
\endinput
